/**
 * Created By Amine Barguellil
 * Date : 5/22/2024
 * Time : 9:52 AM
 * Project Name : master-data
 */


package com.scheidbachmann.masterdata.kafka.config.BusinessPartner;


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.scheidbachmann.masterdata.dto.ConnectionPointDto;
import com.scheidbachmann.masterdata.dto.ContractDto;
import com.scheidbachmann.masterdata.dto.PersonDto;
import com.scheidbachmann.masterdata.enums.BusinessPartnerType;
import com.scheidbachmann.masterdata.kafka.Schema;
import jakarta.validation.Valid;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Set;


/**
 * S&amp;B business partners like car parks, service supplier, ...   _links: rel providerConnectivity           rel supplierContracts           rel consumerContracts
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class BusinessPartnerSchema implements Schema {
    /**
     * internal id of the business partner
     */

    @NotNull
    @Valid
    private String id;

    /**
     * Human readable identifier generated by entervo.connect
     */
    @Size(max = 30)
    private String partnerNumber;

    /**
     * S&B provider id, no UUID
     * minimum: 1
     * maximum: 999
     */
    @NotNull

    @Min(1)
    @Max(999)
    private Integer providerId;

    /**
     * tenant identifier
     */

    private String tenantId;

    /**
     * Operator name
     */

    @NotNull
    @Size(max = 80)
    private String name;

    /**
     * Country (ISO 3166-2 2 letter country code)
     */

    @NotNull
    @Size(max = 2)
    private String countryCode;

    /**
     * city of business partner
     */

    @NotNull
    @Size(max = 80)
    private String city;

    /**
     * Currency (ISO 4217 3 letter currency code)
     */

    @NotNull
    @Size(max = 3)
    private String currency;

    /**
     * Switch off exit authorization
     */
    private Boolean switchOffExit;


    @Valid
    private BusinessPartnerType type;


    /**
     * Internal revision number for optimistic locking
     */
    @NotNull
    private Long revision;

    @Valid
    private PersonDto contactPerson;

    @NotNull
    @JsonIgnore
    private Set<ContractDto> consumerContracts;

    @NotNull
    @JsonIgnore
    private Set<ContractDto> supplierContracts;

    @NotNull
    @JsonIgnore
    private Set<ConnectionPointDto> connectionPoints;

    @Override
    public String getId() {
        return id;
    };

    @Override
    public long getRevision() {
        return revision;
    }

}
